name: Deploy microservice

on:
  workflow_dispatch: 

jobs:
  deploy:
    runs-on: ubuntu-latest 
    env:
      VERSION: ${{ github.sha }}
      TF_VERSION: '1.0.0'  # Specify Terraform version
      AZURE_RG: "tamimshahriarsit722part5"
      AZURE_AKS: "tamimshahriarsit722part5"

    steps:
      - uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ./scripts/terraform
        run: terraform init

      - name: Terraform Apply
        id: terraform
        working-directory: ./scripts/terraform
        run: |
          terraform apply -auto-approve
          echo "::set-output name=acr_server::$(terraform output -raw acr_login_server)"
          echo "::set-output name=acr_username::$(terraform output -raw acr_username)"
          echo "::set-output name=acr_password::$(terraform output -raw acr_password)"
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install docker-compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.14.2'

      - name: Build
        env:
          CONTAINER_REGISTRY: ${{ steps.terraform.outputs.acr_server }}
        run: ./scripts/build-image.sh

      - name: Publish
        env:
          CONTAINER_REGISTRY: ${{ steps.terraform.outputs.acr_server }}
          REGISTRY_UN: ${{ steps.terraform.outputs.acr_username }}
          REGISTRY_PW: ${{ steps.terraform.outputs.acr_password }}
        run: ./scripts/push-image.sh

      - uses: tale/kubectl-action@v1
        with:
          kubectl-version: v1.24.2
    
      - name: Deploy
        run: ./scripts/deploy.sh
